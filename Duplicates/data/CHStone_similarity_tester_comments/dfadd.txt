File E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: 569 tokens, 230 lines
File E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: 1110 tokens, 417 lines
Total: 1679 tokens

E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 60-107|E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 108-156[146]
#define N 46                           |};
const float64 a_input[N] = {           |
0x7FF8000000000000ULL, /* nan */       |const float64 b_input[N] = {
0x7FF0000000000000ULL, /* inf */       |0x3FF0000000000000ULL, /* 1.0 */
0x4000000000000000ULL, /* 2.0 */       |0x3FF0000000000000ULL, /* 1.0 */
0x4000000000000000ULL, /* 2.0 */       |0x0000000000000000ULL, /* 0.0 */
0x3FF0000000000000ULL, /* 1.0 */       |0x3FF8000000000000ULL, /* 1.5 */
0x3FF0000000000000ULL, /* 1.0 */       |0x7FF8000000000000ULL, /* nan */
0x0000000000000000ULL, /* 0.0 */       |0x7FF0000000000000ULL, /* inf */
0x3FF8000000000000ULL, /* 1.5 */       |0x4000000000000000ULL, /* 2.0 */
0x7FF8000000000000ULL, /* nan */       |0x4000000000000000ULL, /* 2.0 */
0x7FF0000000000000ULL, /* inf */       |0x7FF0000000000000ULL, /* inf */
0x0000000000000000ULL, /* 0.0 */       |0x7FF0000000000000ULL, /* inf */
0x3FF8000000000000ULL, /* 1.5 */       |0x0000000000000000ULL, /* 0.0 */
0xFFF8000000000000ULL, /* nan */       |0x3FF0000000000000ULL, /* 1.0 */
0xFFF0000000000000ULL, /* -inf */      |0xBFF0000000000000ULL, /* -1.0 */
0xC000000000000000ULL, /* -2.0 */      |0xBFF0000000000000ULL, /* -1.0 */
0xC000000000000000ULL, /* -2.0 */      |0x8000000000000000ULL, /* -0.0 */
0xBFF0000000000000ULL, /* -1.0 */      |0xBFF8000000000000ULL, /* -1.5 */
0xBFF0000000000000ULL, /* -1.0 */      |0xFFF8000000000000ULL, /* nan */
0x8000000000000000ULL, /* -0.0 */      |0xFFF0000000000000ULL, /* -inf */
0xBFF8000000000000ULL, /* -1.5 */      |0xC000000000000000ULL, /* -2.0 */
0xFFF8000000000000ULL, /* nan */       |0xC000000000000000ULL, /* -2.0 */
0xFFF0000000000000ULL, /* -inf */      |0xFFF0000000000000ULL, /* -inf */
0x8000000000000000ULL, /* -0.0 */      |0xFFF0000000000000ULL, /* -inf */
0xBFF8000000000000ULL, /* -1.5 */      |0x8000000000000000ULL, /* -inf */
0x7FF8000000000000ULL, /* nan */       |0xBFF0000000000000ULL, /* -1.0 */
0x7FF0000000000000ULL, /* inf */       |0xFFF0000000000000ULL, /* -inf */
0x3FF0000000000000ULL, /* 1.0 */       |0xFFF0000000000000ULL, /* -inf */
0x3FF0000000000000ULL, /* 1.0 */       |0xBFF0000000000000ULL, /* -1.0 */
0x3FF0000000000000ULL, /* 1.0 */       |0xFFF8000000000000ULL, /* nan */
0x0000000000000000ULL, /* 0.0 */       |0xFFF0000000000000ULL, /* -inf */
0x3FF8000000000000ULL, /* 1.5 */       |0xBFF0000000000000ULL, /* -1.0 */
0x7FF8000000000000ULL, /* nan */       |0xC000000000000000ULL, /* -2.0 */
0x7FF0000000000000ULL, /* inf */       |0xBFF0000000000000ULL, /* -1.0 */
0x3FF0000000000000ULL, /* 1.0 */       |0xBFF0000000000000ULL, /* -1.0 */
0x4000000000000000ULL, /* 2.0 */       |0x8000000000000000ULL, /* -0.0 */
0xFFF0000000000000ULL, /* -inf */      |0xBFF8000000000000ULL, /* -1.5 */
0xFFF0000000000000ULL, /* -inf */      |0x7FF8000000000000ULL, /* nan */
0xBFF0000000000000ULL, /* -1.0 */      |0x7FF0000000000000ULL, /* inf */
0xBFF0000000000000ULL, /* -1.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xBFF0000000000000ULL, /* -1.0 */      |0x7FF8000000000000ULL, /* nan */
0x8000000000000000ULL, /* -0.0 */      |0x7FF0000000000000ULL, /* inf */
0xBFF8000000000000ULL, /* -1.5 */      |0x3FF0000000000000ULL, /* 1.0 */
0xFFF8000000000000ULL, /* nan */       |0x4000000000000000ULL, /* 2.0 */
0xFFF0000000000000ULL, /* -inf */      |0x3FF0000000000000ULL, /* 1.0 */
0xBFF0000000000000ULL, /* -1.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xC000000000000000ULL  /* -2.0 */      |0x0000000000000000ULL, /* 0.0 */
                                       |0x3FF8000000000000ULL  /* 1.5 */

E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 108-156|E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 157-205[146]
};                                     |};
                                       |
const float64 b_input[N] = {           |const float64 z_output[N] = {
0x3FF0000000000000ULL, /* 1.0 */       |0x7FF8000000000000ULL, /* nan */
0x3FF0000000000000ULL, /* 1.0 */       |0x7FF0000000000000ULL, /* inf */
0x0000000000000000ULL, /* 0.0 */       |0x4000000000000000ULL, /* 2.0 */
0x3FF8000000000000ULL, /* 1.5 */       |0x400C000000000000ULL, /* 3.5 */
0x7FF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0x7FF0000000000000ULL, /* inf */       |0x7FF0000000000000ULL, /* inf */
0x4000000000000000ULL, /* 2.0 */       |0x4000000000000000ULL, /* 2.0 */
0x4000000000000000ULL, /* 2.0 */       |0x400C000000000000ULL, /* 3.5 */
0x7FF0000000000000ULL, /* inf */       |0x7FF8000000000000ULL, /* nan */
0x7FF0000000000000ULL, /* inf */       |0x7FF0000000000000ULL, /* inf */
0x0000000000000000ULL, /* 0.0 */       |0x0000000000000000ULL, /* 0.0 */
0x3FF0000000000000ULL, /* 1.0 */       |0x4004000000000000ULL, /* 2.5 */
0xBFF0000000000000ULL, /* -1.0 */      |0xFFF8000000000000ULL, /* nan */
0xBFF0000000000000ULL, /* -1.0 */      |0xFFF0000000000000ULL, /* -inf */
0x8000000000000000ULL, /* -0.0 */      |0xC000000000000000ULL, /* -2.0 */
0xBFF8000000000000ULL, /* -1.5 */      |0xC00C000000000000ULL, /* -3.5 */
0xFFF8000000000000ULL, /* nan */       |0xFFF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0xFFF0000000000000ULL, /* -inf */
0xC000000000000000ULL, /* -2.0 */      |0xC000000000000000ULL, /* -2.0 */
0xC000000000000000ULL, /* -2.0 */      |0xC00C000000000000ULL, /* -3.5 */
0xFFF0000000000000ULL, /* -inf */      |0xFFF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0xFFF0000000000000ULL, /* -inf */
0x8000000000000000ULL, /* -inf */      |0x8000000000000000ULL, /* -0.0 */
0xBFF0000000000000ULL, /* -1.0 */      |0xC004000000000000ULL, /* -2.5 */
0xFFF0000000000000ULL, /* -inf */      |0x7FF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0x7FFFFFFFFFFFFFFFULL, /* nan */
0xBFF0000000000000ULL, /* -1.0 */      |0x0000000000000000ULL, /* 0.0 */
0xFFF8000000000000ULL, /* nan */       |0xFFF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0xFFF0000000000000ULL, /* -inf */
0xBFF0000000000000ULL, /* -1.0 */      |0xBFF0000000000000ULL, /* -1.0 */
0xC000000000000000ULL, /* -2.0 */      |0xBFE0000000000000ULL, /* -0.5 */
0xBFF0000000000000ULL, /* -1.0 */      |0x7FF8000000000000ULL, /* nan */
0xBFF0000000000000ULL, /* -1.0 */      |0x7FF0000000000000ULL, /* inf */
0x8000000000000000ULL, /* -0.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xBFF8000000000000ULL, /* -1.5 */      |0x3FE0000000000000ULL, /* 0.5 */
0x7FF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0x7FF0000000000000ULL, /* inf */       |0x7FFFFFFFFFFFFFFFULL, /* nan */
0x3FF0000000000000ULL, /* 1.0 */       |0x0000000000000000ULL, /* 0.0 */
0x7FF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0x7FF0000000000000ULL, /* inf */       |0x7FF0000000000000ULL, /* inf */
0x3FF0000000000000ULL, /* 1.0 */       |0x3FF0000000000000ULL, /* 1.0 */
0x4000000000000000ULL, /* 2.0 */       |0x3FE0000000000000ULL, /* 0.5 */
0x3FF0000000000000ULL, /* 1.0 */       |0xFFF8000000000000ULL, /* nan */
0x3FF0000000000000ULL, /* 1.0 */       |0xFFF0000000000000ULL, /* -inf */
0x0000000000000000ULL, /* 0.0 */       |0xBFF0000000000000ULL, /* -1.0 */
0x3FF8000000000000ULL  /* 1.5 */       |0xBFE0000000000000ULL  /* -0.5 */

E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 231-257|E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 312-338[76]
return roundAndPackFloat64 (zSign, zEx |return roundAndPackFloat64 (zSign, zEx
                                       |
}                                      |}
                                       |
/*------------------------------------ |/*------------------------------------
| Returns the result of adding the abs || Returns the result of subtracting th
| floating-point values `a' and `b'.   || precision floating-point values `a' 
| before being returned.  `zSign' is i || difference is negated before being r
| The addition is performed according  || result is a NaN.  The subtraction is
| Floating-Point Arithmetic.           || Standard for Binary Floating-Point A
*------------------------------------- |*-------------------------------------
                                       |
static float64                         |static float64
addFloat64Sigs (float64 a, float64 b,  |subFloat64Sigs (float64 a, float64 b, 
{                                      |{
int16 aExp, bExp, zExp;                |int16 aExp, bExp, zExp;
bits64 aSig, bSig, zSig;               |bits64 aSig, bSig, zSig;
int16 expDiff;                         |int16 expDiff;
                                       |
aSig = extractFloat64Frac (a);         |aSig = extractFloat64Frac (a);
aExp = extractFloat64Exp (a);          |aExp = extractFloat64Exp (a);
bSig = extractFloat64Frac (b);         |bSig = extractFloat64Frac (b);
bExp = extractFloat64Exp (b);          |bExp = extractFloat64Exp (b);
expDiff = aExp - bExp;                 |expDiff = aExp - bExp;
aSig <<= 9;                            |aSig <<= 10;
bSig <<= 9;                            |bSig <<= 10;
if (0 < expDiff)                       |if (0 < expDiff)

E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 159-181|E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 181-203[66]
const float64 z_output[N] = {          |0xFFF0000000000000ULL, /* -inf */
0x7FF8000000000000ULL, /* nan */       |0x8000000000000000ULL, /* -0.0 */
0x7FF0000000000000ULL, /* inf */       |0xC004000000000000ULL, /* -2.5 */
0x4000000000000000ULL, /* 2.0 */       |0x7FF8000000000000ULL, /* nan */
0x400C000000000000ULL, /* 3.5 */       |0x7FFFFFFFFFFFFFFFULL, /* nan */
0x7FF8000000000000ULL, /* nan */       |0x0000000000000000ULL, /* 0.0 */
0x7FF0000000000000ULL, /* inf */       |0xFFF8000000000000ULL, /* nan */
0x4000000000000000ULL, /* 2.0 */       |0xFFF0000000000000ULL, /* -inf */
0x400C000000000000ULL, /* 3.5 */       |0xBFF0000000000000ULL, /* -1.0 */
0x7FF8000000000000ULL, /* nan */       |0xBFE0000000000000ULL, /* -0.5 */
0x7FF0000000000000ULL, /* inf */       |0x7FF8000000000000ULL, /* nan */
0x0000000000000000ULL, /* 0.0 */       |0x7FF0000000000000ULL, /* inf */
0x4004000000000000ULL, /* 2.5 */       |0x3FF0000000000000ULL, /* 1.0 */
0xFFF8000000000000ULL, /* nan */       |0x3FE0000000000000ULL, /* 0.5 */
0xFFF0000000000000ULL, /* -inf */      |0x7FF8000000000000ULL, /* nan */
0xC000000000000000ULL, /* -2.0 */      |0x7FFFFFFFFFFFFFFFULL, /* nan */
0xC00C000000000000ULL, /* -3.5 */      |0x0000000000000000ULL, /* 0.0 */
0xFFF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0x7FF0000000000000ULL, /* inf */
0xC000000000000000ULL, /* -2.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xC00C000000000000ULL, /* -3.5 */      |0x3FE0000000000000ULL, /* 0.5 */
0xFFF8000000000000ULL, /* nan */       |0xFFF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0xFFF0000000000000ULL, /* -inf */

E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 258-269|E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 377-388[49]
{                                      |aExpBigger:
if (aExp == 0x7FF)                     |if (aExp == 0x7FF)
 {                                     |{
 if (aSig)                             |if (aSig)
 return propagateFloat64NaN (a, b);    | return propagateFloat64NaN (a, b);
 return a;                             |return a;
 }                                     |}
if (bExp == 0)                         |if (bExp == 0)
 --expDiff;                            |--expDiff;
else                                   |else
 bSig |= LIT64 (0x2000000000000000);   |bSig |= LIT64 (0x4000000000000000);
shift64RightJamming (bSig, expDiff, &b |shift64RightJamming (bSig, expDiff, &b

E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 181-192|E:\work\CHStone\CHStone_v1.11_150204\dfadd\dfadd.c: line 192-203[33]
0xFFF0000000000000ULL, /* -inf */      |0x7FF0000000000000ULL, /* inf */
0x8000000000000000ULL, /* -0.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xC004000000000000ULL, /* -2.5 */      |0x3FE0000000000000ULL, /* 0.5 */
0x7FF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0x7FFFFFFFFFFFFFFFULL, /* nan */       |0x7FFFFFFFFFFFFFFFULL, /* nan */
0x0000000000000000ULL, /* 0.0 */       |0x0000000000000000ULL, /* 0.0 */
0xFFF8000000000000ULL, /* nan */       |0x7FF8000000000000ULL, /* nan */
0xFFF0000000000000ULL, /* -inf */      |0x7FF0000000000000ULL, /* inf */
0xBFF0000000000000ULL, /* -1.0 */      |0x3FF0000000000000ULL, /* 1.0 */
0xBFE0000000000000ULL, /* -0.5 */      |0x3FE0000000000000ULL, /* 0.5 */
0x7FF8000000000000ULL, /* nan */       |0xFFF8000000000000ULL, /* nan */
0x7FF0000000000000ULL, /* inf */       |0xFFF0000000000000ULL, /* -inf */

E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 211-226|E:\work\CHStone\CHStone_v1.11_150204\dfadd\softfloat.c: line 311-325[24]
zExp = 0;                              |roundAndPack:
return packFloat64 (zSign, zExp, zSig) |return roundAndPackFloat64 (zSign, zEx
                                       |
}                                      |}
                                       |
/*------------------------------------ |/*------------------------------------
| Takes an abstract floating-point val || Returns the result of subtracting th
| and significand `zSig', and returns  || precision floating-point values `a' 
| point value corresponding to the abs || difference is negated before being r
| `roundAndPackFloat64' except that `z || result is a NaN.  The subtraction is
| Bit 63 of `zSig' must be zero, and ` || Standard for Binary Floating-Point A
| floating-point exponent.             |*-------------------------------------
*------------------------------------- |
                                       |static float64
static float64                         |subFloat64Sigs (float64 a, float64 b, 
normalizeRoundAndPackFloat64 (flag zSi |

